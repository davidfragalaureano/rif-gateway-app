/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  $RIFGateway,
  $RIFGatewayInterface,
} from "../../../contracts-exposed/RIFGateway.sol/$RIFGateway";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "$_bar",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "foo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610157806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063209d40041461003b578063c298557814610059575b600080fd5b610043610092565b60405161005091906100d3565b60405180910390f35b60408051808201909152600381527f62617200000000000000000000000000000000000000000000000000000000006020820152610043565b60606100ce60408051808201909152600381527f62617a0000000000000000000000000000000000000000000000000000000000602082015290565b905090565b600060208083528351808285015260005b81811015610100578581018301518582016040015282016100e4565b506000604082860101526040601f19601f830116850101925050509291505056fea264697066735822122018110cdd3b5515923a0a3beade300e3bff6214487725e99785ff1eaa8eb818a364736f6c63430008100033";

type $RIFGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $RIFGatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $RIFGateway__factory extends ContractFactory {
  constructor(...args: $RIFGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$RIFGateway> {
    return super.deploy(overrides || {}) as Promise<$RIFGateway>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $RIFGateway {
    return super.attach(address) as $RIFGateway;
  }
  override connect(signer: Signer): $RIFGateway__factory {
    return super.connect(signer) as $RIFGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $RIFGatewayInterface {
    return new utils.Interface(_abi) as $RIFGatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $RIFGateway {
    return new Contract(address, _abi, signerOrProvider) as $RIFGateway;
  }
}
