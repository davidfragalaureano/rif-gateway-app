/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $FeeManager,
  $FeeManagerInterface,
} from "../../../../contracts-exposed/feeManager/FeeManager.sol/$FeeManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "RBTCTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arg0",
        type: "address",
      },
    ],
    name: "$_beneficiares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "fundBeneficiary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610650806100206000396000f3fe60806040526004361061003e5760003560e01c8062a4e863146100435780632e1a7d4d1461005f578063de305a8814610088578063f8b2cb4f146100c5575b600080fd5b61005d60048036038101906100589190610483565b610102565b005b34801561006b57600080fd5b50610086600480360381019061008191906104e6565b6101d8565b005b34801561009457600080fd5b506100af60048036038101906100aa9190610483565b610390565b6040516100bc9190610522565b60405180910390f35b3480156100d157600080fd5b506100ec60048036038101906100e79190610483565b6103d8565b6040516100f99190610522565b60405180910390f35b6000340361013c576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461018a919061056c565b92505081905550348173ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a350565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610250576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029e91906105a0565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516102cb90610605565b60006040518083038185875af1925050503d8060008114610308576040519150601f19603f3d011682016040523d82523d6000602084013e61030d565b606091505b5050905080610348576040517f5b8688af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045082610425565b9050919050565b61046081610445565b811461046b57600080fd5b50565b60008135905061047d81610457565b92915050565b60006020828403121561049957610498610420565b5b60006104a78482850161046e565b91505092915050565b6000819050919050565b6104c3816104b0565b81146104ce57600080fd5b50565b6000813590506104e0816104ba565b92915050565b6000602082840312156104fc576104fb610420565b5b600061050a848285016104d1565b91505092915050565b61051c816104b0565b82525050565b60006020820190506105376000830184610513565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610577826104b0565b9150610582836104b0565b925082820190508082111561059a5761059961053d565b5b92915050565b60006105ab826104b0565b91506105b6836104b0565b92508282039050818111156105ce576105cd61053d565b5b92915050565b600081905092915050565b50565b60006105ef6000836105d4565b91506105fa826105df565b600082019050919050565b6000610610826105e2565b915081905091905056fea264697066735822122052970f619184abe4652050f0ffd6fee8b5a0e0f3cd9d5d528cdcdede6034035d64736f6c63430008100033";

type $FeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $FeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $FeeManager__factory extends ContractFactory {
  constructor(...args: $FeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$FeeManager> {
    return super.deploy(overrides || {}) as Promise<$FeeManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $FeeManager {
    return super.attach(address) as $FeeManager;
  }
  override connect(signer: Signer): $FeeManager__factory {
    return super.connect(signer) as $FeeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $FeeManagerInterface {
    return new utils.Interface(_abi) as $FeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $FeeManager {
    return new Contract(address, _abi, signerOrProvider) as $FeeManager;
  }
}
