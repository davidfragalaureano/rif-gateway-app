/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $ERC677,
  $ERC677Interface,
} from "../../../../contracts-exposed/mocks/ERC677.sol/$ERC677";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_afterTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_beforeTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_spendAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "$_transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526e1a185c991a185d0b595e1c1bdcd959608a1b6005553480156200002757600080fd5b506040516200132f3803806200132f8339810160408190526200004a9162000242565b83838383818160036200005e838262000364565b5060046200006d828262000364565b5050506200008284846200009060201b60201c565b505050505050505062000458565b6001600160a01b038216620000eb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620000ff919062000430565b90915550506001600160a01b038216600090815260208190526040812080548392906200012e90849062000430565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001a557600080fd5b81516001600160401b0380821115620001c257620001c26200017d565b604051601f8301601f19908116603f01168101908282118183101715620001ed57620001ed6200017d565b816040528381526020925086838588010111156200020a57600080fd5b600091505b838210156200022e57858201830151818301840152908201906200020f565b600093810190920192909252949350505050565b600080600080608085870312156200025957600080fd5b84516001600160a01b03811681146200027157600080fd5b6020860151604087015191955093506001600160401b03808211156200029657600080fd5b620002a48883890162000193565b93506060870151915080821115620002bb57600080fd5b50620002ca8782880162000193565b91505092959194509250565b600181811c90821680620002eb57607f821691505b6020821081036200030c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017857600081815260208120601f850160051c810160208610156200033b5750805b601f850160051c820191505b818110156200035c5782815560010162000347565b505050505050565b81516001600160401b038111156200038057620003806200017d565b6200039881620003918454620002d6565b8462000312565b602080601f831160018114620003d05760008415620003b75750858301515b600019600386901b1c1916600185901b1785556200035c565b600085815260208120601f198616915b828110156200040157888601518255948401946001909101908401620003e0565b5085821015620004205787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200045257634e487b7160e01b600052601160045260246000fd5b92915050565b610ec780620004686000396000f3fe60806040526004361061016e5760003560e01c806370a08231116100cb578063b2331d7d1161007f578063dd62ed3e11610059578063dd62ed3e146103ad578063e047838d146103f3578063efb43b071461041357600080fd5b8063b2331d7d1461036d578063c740204b146102a0578063cc461d621461038d57600080fd5b806395d89b41116100b057806395d89b4114610318578063a457c2d71461032d578063a9059cbb1461034d57600080fd5b806370a08231146102c2578063861e3d3d146102f857600080fd5b8063313ce56711610122578063342db73911610107578063342db7391461026a578063395093511461028057806342a0299d146102a057600080fd5b8063313ce5671461023957806332cadf3c1461025557600080fd5b806318160ddd1161015357806318160ddd146101d557806323b872dd146101fe5780632904df291461021e57600080fd5b806306fdde031461017a578063095ea7b3146101a557600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061018f610433565b60405161019c9190610d31565b60405180910390f35b3480156101b157600080fd5b506101c56101c0366004610d67565b6104c5565b604051901515815260200161019c565b3480156101e157600080fd5b506b033b2e3c9fd0803ce80000005b60405190815260200161019c565b34801561020a57600080fd5b506101c5610219366004610d91565b6104df565b34801561022a57600080fd5b5060405133815260200161019c565b34801561024557600080fd5b506040516012815260200161019c565b34801561026157600080fd5b5061018f610503565b34801561027657600080fd5b506101f060055481565b34801561028c57600080fd5b506101c561029b366004610d67565b610542565b3480156102ac57600080fd5b506102c06102bb366004610d91565b505050565b005b3480156102ce57600080fd5b506101f06102dd366004610dcd565b6001600160a01b031660009081526020819052604090205490565b34801561030457600080fd5b506102c0610313366004610d91565b610581565b34801561032457600080fd5b5061018f61058c565b34801561033957600080fd5b506101c5610348366004610d67565b61059b565b34801561035957600080fd5b506101c5610368366004610d67565b61064a565b34801561037957600080fd5b506102c0610388366004610d91565b610658565b34801561039957600080fd5b506102c06103a8366004610d67565b610663565b3480156103b957600080fd5b506101f06103c8366004610de8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3480156103ff57600080fd5b506102c061040e366004610d67565b610671565b34801561041f57600080fd5b506102c061042e366004610d91565b61067b565b60606003805461044290610e1b565b80601f016020809104026020016040519081016040528092919081815260200182805461046e90610e1b565b80156104bb5780601f10610490576101008083540402835291602001916104bb565b820191906000526020600020905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b6000336104d3818585610686565b60019150505b92915050565b6000336104ed8582856107de565b6104f8858585610870565b506001949350505050565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906104d3908290869061057c908790610e6b565b610686565b6102bb838383610686565b60606004805461044290610e1b565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561063d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104f88286868403610686565b6000336104d3818585610870565b6102bb8383836107de565b61066d8282610a87565b5050565b61066d8282610b66565b6102bb838383610870565b6001600160a01b0383166107015760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b03821661077d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461086a578181101561085d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610634565b61086a8484848403610686565b50505050565b6001600160a01b0383166108ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b0382166109685760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b038316600090815260208190526040902054818110156109f75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a2e908490610e6b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a7a91815260200190565b60405180910390a361086a565b6001600160a01b038216610add5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610634565b8060026000828254610aef9190610e6b565b90915550506001600160a01b03821660009081526020819052604081208054839290610b1c908490610e6b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610be25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b03821660009081526020819052604090205481811015610c715760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610634565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ca0908490610e7e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6000815180845260005b81811015610d1157602081850181015186830182015201610cf5565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d446020830184610ceb565b9392505050565b80356001600160a01b0381168114610d6257600080fd5b919050565b60008060408385031215610d7a57600080fd5b610d8383610d4b565b946020939093013593505050565b600080600060608486031215610da657600080fd5b610daf84610d4b565b9250610dbd60208501610d4b565b9150604084013590509250925092565b600060208284031215610ddf57600080fd5b610d4482610d4b565b60008060408385031215610dfb57600080fd5b610e0483610d4b565b9150610e1260208401610d4b565b90509250929050565b600181811c90821680610e2f57607f821691505b602082108103610e4f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104d9576104d9610e55565b818103818111156104d9576104d9610e5556fea26469706673582212201041bad601e3830b1afbe269d60d609e4b2611ea1ad4ff625bc046094ed1a4bb64736f6c63430008100033";

type $ERC677ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $ERC677ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $ERC677__factory extends ContractFactory {
  constructor(...args: $ERC677ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialAccount: PromiseOrValue<string>,
    initialBalance: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$ERC677> {
    return super.deploy(
      initialAccount,
      initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<$ERC677>;
  }
  override getDeployTransaction(
    initialAccount: PromiseOrValue<string>,
    initialBalance: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialAccount,
      initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): $ERC677 {
    return super.attach(address) as $ERC677;
  }
  override connect(signer: Signer): $ERC677__factory {
    return super.connect(signer) as $ERC677__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $ERC677Interface {
    return new utils.Interface(_abi) as $ERC677Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $ERC677 {
    return new Contract(address, _abi, signerOrProvider) as $ERC677;
  }
}
