/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $IdentityLendingService,
  $IdentityLendingServiceInterface,
} from "../../../../contracts-exposed/mocks/IdentityLendingService.sol/$IdentityLendingService";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ACME",
        name: "acmeLending",
        type: "address",
      },
      {
        internalType: "contract UserIdentityFactory",
        name: "userIdentityFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Lend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "$_checkOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "$_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "enum LendingService.PayBackOption",
        name: "payBackOption",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    name: "addListing",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum LendingService.PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
        ],
        internalType: "struct LendingService.LendingServiceListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "enum LendingService.PayBackOption",
        name: "payBackOption",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "removeListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceType",
    outputs: [
      {
        internalType: "enum Service.ServiceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum LendingService.PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rewardRate",
            type: "uint256",
          },
        ],
        internalType: "struct LendingService.LendingServiceListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051620014be380380620014be833981016040819052610031916100e5565b818161003c3361007d565b6000805460ff60a01b19169055600380546001600160a01b039384166001600160a01b031991821617909155600480549290931691161790555061011f9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146100e257600080fd5b50565b600080604083850312156100f857600080fd5b8251610103816100cd565b6020840151909250610114816100cd565b809150509250929050565b61138f806200012f6000396000f3fe60806040526004361061010d5760003560e01c8063715018a6116100a5578063cbaa068f11610074578063ebcca70711610059578063ebcca70714610322578063f2fde38b14610337578063fe1c9a241461035757600080fd5b8063cbaa068f146102df578063db0881a1146102f457600080fd5b8063715018a61461027757806388700d1c1461028c5780638da5cb5b146102b957806397dffc61146102d757600080fd5b806332cadf3c116100e157806332cadf3c146102005780633ccfd60b1461022257806359edbe711461023757806366c5492c1461025757600080fd5b806207df301461011257806312065fe0146101945780632904df29146101b75780632bea10fe146101de575b600080fd5b34801561011e57600080fd5b5061017961012d366004610f11565b6001602081815260009384526040808520909152918352912080549181015460028201546003830154600490930154919290916001600160a01b03821691600160a01b900460ff169086565b60405161018b96959493929190610f67565b60405180910390f35b3480156101a057600080fd5b506101a9610377565b60405190815260200161018b565b3480156101c357600080fd5b50335b6040516001600160a01b03909116815260200161018b565b3480156101ea57600080fd5b506101fe6101f9366004610fd3565b6104d2565b005b34801561020c57600080fd5b50610215610592565b60405161018b91906110d1565b34801561022e57600080fd5b506101fe6105d1565b34801561024357600080fd5b506101fe610252366004610f11565b61089e565b34801561026357600080fd5b506101a96102723660046110eb565b610917565b34801561028357600080fd5b506101fe610a7e565b34801561029857600080fd5b506102ac6102a7366004610f11565b610a92565b60405161018b919061113b565b3480156102c557600080fd5b506000546001600160a01b03166101c6565b6101fe610b3a565b3480156102eb57600080fd5b506002546101a9565b34801561030057600080fd5b5060005461031590600160a01b900460ff1681565b60405161018b919061118f565b34801561032e57600080fd5b506101fe610d5d565b34801561034357600080fd5b506101fe6103523660046111a9565b610d65565b34801561036357600080fd5b506101fe6103723660046111a9565b610de9565b60048054604051632fea7b8160e01b8152339281019290925260009182916001600160a01b031690632fea7b8190602401602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e991906111c6565b90506001600160a01b03811661040157600091505090565b6003546040805160048082526024820183526020820180516001600160e01b0316629032ff60e51b179052915163d79f44eb60e01b81526000936001600160a01b038087169463d79f44eb9461045c949390921692016111e3565b600060405180830381865afa158015610479573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a1919081019061120d565b9050600080828060200190518101906104ba91906112ba565b90925090506104c981836112f4565b94505050505090565b6001600160a01b038083166000908152600160208181526040808420865185528252928390208551815590850151918101919091559083015160028201556060830151600380830180549290941673ffffffffffffffffffffffffffffffffffffffff19831681178555608086015186959093909274ffffffffffffffffffffffffffffffffffffffffff1990911690911790600160a01b90849081111561057c5761057c610f3d565b021790555060a082015181600401559050505050565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b600480546040516316caac1b60e21b815233928101929092526001600160a01b031690635b2ab06c90602401600060405180830381600087803b15801561061757600080fd5b505af115801561062b573d6000803e3d6000fd5b505060048054604051632fea7b8160e01b81523392810192909252600093506001600160a01b03169150632fea7b8190602401602060405180830381865afa15801561067b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069f91906111c6565b6003546040805160048082526024820183526020820180516001600160e01b0316629032ff60e51b179052915163d79f44eb60e01b81529394506000936001600160a01b038087169463d79f44eb946106ff9491909216929091016111e3565b600060405180830381865afa15801561071c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610744919081019061120d565b90506000808280602001905181019061075d91906112ba565b600354604051602481018490529294509092506001600160a01b038087169263621091c2929091169060440160408051601f198184030181529181526020820180516001600160e01b03167f2e1a7d4d000000000000000000000000000000000000000000000000000000001790525160e084901b7fffffffff000000000000000000000000000000000000000000000000000000001681526108049291906004016111e3565b6020604051808303816000875af1158015610823573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108479190611307565b50337f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb600061087684866112f4565b604080516001600160a01b03909316835260208301919091520160405180910390a250505050565b6108a6610df5565b6001600160a01b03821660009081526001602081815260408084208585529091528220828155908101829055600280820183905560038201805474ffffffffffffffffffffffffffffffffffffffffff19169055600490910182905580549161090e83611329565b91905055505050565b6000610921610df5565b6000600254600161093291906112f4565b90506040518060c00160405280828152602001888152602001878152602001866001600160a01b0316815260200185600381111561097257610972610f3d565b815260209081018590526001600160a01b0380881660009081526001808452604080832087845285529182902085518155938501519084015583015160028301556060830151600380840180549290931673ffffffffffffffffffffffffffffffffffffffff198316811784556080860151939274ffffffffffffffffffffffffffffffffffffffffff19161790600160a01b908490811115610a1757610a17610f3d565b021790555060a0919091015160049091015560028054906000610a3983611340565b909155505060405181906001600160a01b038716907ff060b874355dd22d0bc251d61fca3b6d902778149a3048748276c9ee78ead56c90600090a39695505050505050565b610a86610df5565b610a906000610e4f565b565b610a9a610eac565b6001600160a01b038381166000908152600160208181526040808420878552825292839020835160c081018552815481529281015491830191909152600281015492820192909252600380830154938416606083015290926080840191600160a01b90910460ff1690811115610b1257610b12610f3d565b6003811115610b2357610b23610f3d565b815260200160048201548152505090505b92915050565b34600003610b7b576040517f3728b83d0000000000000000000000000000000000000000000000000000000081523460048201526024015b60405180910390fd5b600480546040516316caac1b60e21b815233928101929092526001600160a01b031690635b2ab06c90602401600060405180830381600087803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b505060048054604051632fea7b8160e01b81523392810192909252600093506001600160a01b03169150632fea7b8190602401602060405180830381865afa158015610c25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4991906111c6565b6003546040805160048082526024820183526020820180516001600160e01b03167fd0e30db00000000000000000000000000000000000000000000000000000000017905291517fc89acc860000000000000000000000000000000000000000000000000000000081529394506001600160a01b038086169463c89acc86943494610cdb9491909316929091016111e3565b60206040518083038185885af1158015610cf9573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d1e9190611307565b50604080516000815234602082015233917f11dd72a5d477527ee1cbe309212bb368745a98cf1dc3befcac7eef4988a957c2910160405180910390a250565b610a90610df5565b610d6d610df5565b6001600160a01b038116610de95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b72565b610df281610e4f565b50565b6000546001600160a01b03163314610a905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b72565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115610eef57610eef610f3d565b8152602001600081525090565b6001600160a01b0381168114610df257600080fd5b60008060408385031215610f2457600080fd5b8235610f2f81610efc565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60048110610f6357610f63610f3d565b9052565b86815260208101869052604081018590526001600160a01b038416606082015260c08101610f986080830185610f53565b8260a0830152979650505050505050565b634e487b7160e01b600052604160045260246000fd5b803560048110610fce57600080fd5b919050565b60008082840360e0811215610fe757600080fd5b8335610ff281610efc565b925060c0601f198201121561100657600080fd5b5060405160c0810181811067ffffffffffffffff8211171561102a5761102a610fa9565b8060405250602084013581526040840135602082015260608401356040820152608084013561105881610efc565b606082015261106960a08501610fbf565b608082015260c0939093013560a08401525092909150565b60005b8381101561109c578181015183820152602001611084565b50506000910152565b600081518084526110bd816020860160208601611081565b601f01601f19169290920160200192915050565b6020815260006110e460208301846110a5565b9392505050565b600080600080600060a0868803121561110357600080fd5b8535945060208601359350604086013561111c81610efc565b925061112a60608701610fbf565b949793965091946080013592915050565b600060c0820190508251825260208301516020830152604083015160408301526001600160a01b03606084015116606083015260808301516111806080840182610f53565b5060a092830151919092015290565b60208101600283106111a3576111a3610f3d565b91905290565b6000602082840312156111bb57600080fd5b81356110e481610efc565b6000602082840312156111d857600080fd5b81516110e481610efc565b6001600160a01b038316815260406020820152600061120560408301846110a5565b949350505050565b60006020828403121561121f57600080fd5b815167ffffffffffffffff8082111561123757600080fd5b818401915084601f83011261124b57600080fd5b81518181111561125d5761125d610fa9565b604051601f8201601f19908116603f0116810190838211818310171561128557611285610fa9565b8160405282815287602084870101111561129e57600080fd5b6112af836020830160208801611081565b979650505050505050565b600080604083850312156112cd57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b80820180821115610b3457610b346112de565b60006020828403121561131957600080fd5b815180151581146110e457600080fd5b600081611338576113386112de565b506000190190565b600060018201611352576113526112de565b506001019056fea2646970667358221220b9244793cfebf7c478dac409f5c59ed99c78bee799456641f908bb224e2d6d6d64736f6c63430008100033";

type $IdentityLendingServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $IdentityLendingServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $IdentityLendingService__factory extends ContractFactory {
  constructor(...args: $IdentityLendingServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    acmeLending: PromiseOrValue<string>,
    userIdentityFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$IdentityLendingService> {
    return super.deploy(
      acmeLending,
      userIdentityFactory,
      overrides || {}
    ) as Promise<$IdentityLendingService>;
  }
  override getDeployTransaction(
    acmeLending: PromiseOrValue<string>,
    userIdentityFactory: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      acmeLending,
      userIdentityFactory,
      overrides || {}
    );
  }
  override attach(address: string): $IdentityLendingService {
    return super.attach(address) as $IdentityLendingService;
  }
  override connect(signer: Signer): $IdentityLendingService__factory {
    return super.connect(signer) as $IdentityLendingService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $IdentityLendingServiceInterface {
    return new utils.Interface(_abi) as $IdentityLendingServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $IdentityLendingService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as $IdentityLendingService;
  }
}
