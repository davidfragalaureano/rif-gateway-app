/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $Providers,
  $ProvidersInterface,
} from "../../../../contracts-exposed/services/Providers.sol/$Providers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "InvalidProviderAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "$_checkOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "arr",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "add",
        type: "address",
      },
    ],
    name: "$_isOnAddressArray",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "$_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
    ],
    name: "addService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getServices",
    outputs: [
      {
        internalType: "contract Service[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
    ],
    name: "validate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ad18061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80637541785111610081578063ebcca7071161005b578063ebcca7071461017b578063f2fde38b14610183578063fe1c9a241461019657600080fd5b806375417851146101325780638da5cb5b14610147578063eb7eb54a1461015857600080fd5b806332cadf3c116100b257806332cadf3c146101025780635372a9ce14610117578063715018a61461012a57600080fd5b80631cc0a470146100ce5780632904df29146100e3575b600080fd5b6100e16100dc3660046108a8565b6101a9565b005b335b6040516001600160a01b0390911681526020015b60405180910390f35b61010a610314565b6040516100f991906108e6565b6100e1610125366004610934565b610353565b6100e1610512565b61013a610526565b6040516100f99190610958565b6000546001600160a01b03166100e5565b61016b6101663660046109a5565b6106a2565b60405190151581526020016100f9565b6100e16106ea565b6100e1610191366004610934565b6106f2565b6100e16101a4366004610934565b610776565b6101b1610782565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190610a2b565b9050821561030f57610281600380548060200260200160405190810160405280929190818152602001828054801561027657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610258575b5050505050826107dc565b6102d157600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b03818116600090815260016020818152604083208054928301815583529091200180546001600160a01b0319169184169190911790555b505050565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190610a2b565b90506001600160a01b038116610409576040517f59e3460e0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024015b60405180910390fd5b61046b6004805480602002602001604051908101604052809291908181526020018280548015610276576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610258575050505050826107dc565b6104bb57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0383161790555b6001600160a01b038181166000908152600260209081526040822080546001810182559083529082200180546001600160a01b03191692851692909217909155600580549161050983610a48565b91905055505050565b61051a610782565b6105246000610843565b565b6060600060055467ffffffffffffffff81111561054557610545610a6f565b60405190808252806020026020018201604052801561056e578160200160208202803683370190505b5090506000805b60035481101561069a576000600160006003848154811061059857610598610a85565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208054825181850281018501909352808352919290919083018282801561060e57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105f0575b5050505050905060005b81518110156106855781818151811061063357610633610a85565b602002602001015185858151811061064d5761064d610a85565b6001600160a01b03909216602092830291909101909101528361066f81610a48565b945050808061067d90610a48565b915050610618565b5050808061069290610a48565b915050610575565b509092915050565b60006106e28484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692506107dc915050565b949350505050565b610524610782565b6106fa610782565b6001600160a01b0381166107765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610400565b61077f81610843565b50565b6000546001600160a01b031633146105245760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610400565b6000805b835181101561083757826001600160a01b031684828151811061080557610805610a85565b60200260200101516001600160a01b03160361082557600191505061083d565b8061082f81610a48565b9150506107e0565b50600090505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461077f57600080fd5b600080604083850312156108bb57600080fd5b823580151581146108cb57600080fd5b915060208301356108db81610893565b809150509250929050565b600060208083528351808285015260005b81811015610913578581018301518582016040015282016108f7565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561094657600080fd5b813561095181610893565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156109995783516001600160a01b031683529284019291840191600101610974565b50909695505050505050565b6000806000604084860312156109ba57600080fd5b833567ffffffffffffffff808211156109d257600080fd5b818601915086601f8301126109e657600080fd5b8135818111156109f557600080fd5b8760208260051b8501011115610a0a57600080fd5b60209283019550935050840135610a2081610893565b809150509250925092565b600060208284031215610a3d57600080fd5b815161095181610893565b600060018201610a6857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212209279829d6b8e5f389643ceb9eec62448e8be72a7a359ebfe409bfd637502f5f764736f6c63430008100033";

type $ProvidersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $ProvidersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $Providers__factory extends ContractFactory {
  constructor(...args: $ProvidersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$Providers> {
    return super.deploy(overrides || {}) as Promise<$Providers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $Providers {
    return super.attach(address) as $Providers;
  }
  override connect(signer: Signer): $Providers__factory {
    return super.connect(signer) as $Providers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $ProvidersInterface {
    return new utils.Interface(_abi) as $ProvidersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $Providers {
    return new Contract(address, _abi, signerOrProvider) as $Providers;
  }
}
