/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $Providers,
  $ProvidersInterface,
} from "../../../../contracts-exposed/services/Providers.sol/$Providers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceTypeManager",
        name: "stm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "InvalidProviderAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "serviceType",
        type: "bytes4",
      },
    ],
    name: "InvalidServiceImplementation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "NonConformityErrMsg",
        type: "string",
      },
    ],
    name: "NonConformity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "$_checkOwner",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "$_msgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "$_transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__hh_exposed_bytecode_marker",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
    ],
    name: "addService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getServices",
    outputs: [
      {
        internalType: "contract Service[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526e1a185c991a185d0b595e1c1bdcd959608a1b60055534801561002657600080fd5b50604051610c2f380380610c2f833981016040819052610045916100c5565b8061004f33610075565b600480546001600160a01b0319166001600160a01b0392909216919091179055506100f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d757600080fd5b81516001600160a01b03811681146100ee57600080fd5b9392505050565b610b2b806101046000396000f3fe6080604052600436106100b55760003560e01c80637541785111610069578063ebcca7071161004e578063ebcca707146101aa578063f2fde38b146101bf578063fe1c9a24146101df57600080fd5b8063754178511461016a5780638da5cb5b1461018c57600080fd5b8063342db7391161009a578063342db7391461010f5780635372a9ce14610133578063715018a61461015557600080fd5b80632904df29146100c157806332cadf3c146100ed57600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b50335b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f957600080fd5b506101026101ff565b6040516100e4919061094d565b34801561011b57600080fd5b5061012560055481565b6040519081526020016100e4565b34801561013f57600080fd5b5061015361014e3660046109b0565b61023e565b005b34801561016157600080fd5b5061015361066e565b34801561017657600080fd5b5061017f610682565b6040516100e491906109d4565b34801561019857600080fd5b506000546001600160a01b03166100d0565b3480156101b657600080fd5b506101536107fe565b3480156101cb57600080fd5b506101536101da3660046109b0565b610806565b3480156101eb57600080fd5b506101536101fa3660046109b0565b61088a565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092949350505050565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000080825260048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bf9190610a21565b610350576040517fc06d352f00000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5365727669636520646f6573206e6f7420696d706c656d656e7420455243313660448201527f350000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60048054604080517fd4604b0200000000000000000000000000000000000000000000000000000000815290516001600160a01b03928316936301ffc9a79386169263d4604b0292818301926020928290030181865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610a43565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602401602060405180830381865afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190610a21565b6105225780816001600160a01b031663d4604b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bd9190610a43565b6040517fabd6a3b30000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301527fffffffff00000000000000000000000000000000000000000000000000000000166024820152604401610347565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190610a85565b90506001600160a01b0381166105d3576040517f59e3460e0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610347565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03858116918217909355600090815260208481526040822080549586018155825281209093018054909116918516919091179055600380549161066583610aa2565b91905055505050565b610676610896565b61068060006108f0565b565b6060600060035467ffffffffffffffff8111156106a1576106a1610ac9565b6040519080825280602002602001820160405280156106ca578160200160208202803683370190505b5090506000805b6002548110156107f657600060016000600284815481106106f4576106f4610adf565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208054825181850281018501909352808352919290919083018282801561076a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161074c575b5050505050905060005b81518110156107e15781818151811061078f5761078f610adf565b60200260200101518585815181106107a9576107a9610adf565b6001600160a01b0390921660209283029190910190910152836107cb81610aa2565b94505080806107d990610aa2565b915050610774565b505080806107ee90610aa2565b9150506106d1565b509092915050565b610680610896565b61080e610896565b6001600160a01b03811661088a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610347565b610893816108f0565b50565b6000546001600160a01b031633146106805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610347565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b8181101561097a5785810183015185820160400152820161095e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461089357600080fd5b6000602082840312156109c257600080fd5b81356109cd8161099b565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610a155783516001600160a01b0316835292840192918401916001016109f0565b50909695505050505050565b600060208284031215610a3357600080fd5b815180151581146109cd57600080fd5b600060208284031215610a5557600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146109cd57600080fd5b600060208284031215610a9757600080fd5b81516109cd8161099b565b600060018201610ac257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea26469706673582212201a179bb18e8d63281996f8128f9a64a4a6878d489a3c3d6a770baba699570aad64736f6c63430008100033";

type $ProvidersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $ProvidersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $Providers__factory extends ContractFactory {
  constructor(...args: $ProvidersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$Providers> {
    return super.deploy(stm, overrides || {}) as Promise<$Providers>;
  }
  override getDeployTransaction(
    stm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stm, overrides || {});
  }
  override attach(address: string): $Providers {
    return super.attach(address) as $Providers;
  }
  override connect(signer: Signer): $Providers__factory {
    return super.connect(signer) as $Providers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $ProvidersInterface {
    return new utils.Interface(_abi) as $ProvidersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $Providers {
    return new Contract(address, _abi, signerOrProvider) as $Providers;
  }
}
