/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $UserIdentityACL,
  $UserIdentityACLInterface,
} from "../../../../contracts-exposed/userIdentity/UserIdentityACL.sol/$UserIdentityACL";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arg0",
        type: "address",
      },
      {
        internalType: "address",
        name: "arg1",
        type: "address",
      },
    ],
    name: "$_allowedContractCalls",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "serviceProvider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approval",
        type: "bool",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedToExecuteCallFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "isAllowedToExecuteCallFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610489806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ff51e991461005157806325d4a9be146100815780632d1fb389146100b157806379ee6b52146100cd575b600080fd5b61006b60048036038101906100669190610344565b6100fd565b604051610078919061038c565b60405180910390f35b61009b600480360381019061009691906103a7565b610110565b6040516100a8919061038c565b60405180910390f35b6100cb60048036038101906100c69190610413565b610124565b005b6100e760048036038101906100e291906103a7565b6101bb565b6040516100f4919061038c565b60405180910390f35b6000610109823361024e565b9050919050565b600061011c838361024e565b905092915050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610311826102e6565b9050919050565b61032181610306565b811461032c57600080fd5b50565b60008135905061033e81610318565b92915050565b60006020828403121561035a576103596102e1565b5b60006103688482850161032f565b91505092915050565b60008115159050919050565b61038681610371565b82525050565b60006020820190506103a1600083018461037d565b92915050565b600080604083850312156103be576103bd6102e1565b5b60006103cc8582860161032f565b92505060206103dd8582860161032f565b9150509250929050565b6103f081610371565b81146103fb57600080fd5b50565b60008135905061040d816103e7565b92915050565b6000806040838503121561042a576104296102e1565b5b60006104388582860161032f565b9250506020610449858286016103fe565b915050925092905056fea2646970667358221220918bae3f58a59ae8b5bef210b367b0d46eb402ae8385061fe396c03aad4b756b64736f6c63430008100033";

type $UserIdentityACLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $UserIdentityACLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $UserIdentityACL__factory extends ContractFactory {
  constructor(...args: $UserIdentityACLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$UserIdentityACL> {
    return super.deploy(overrides || {}) as Promise<$UserIdentityACL>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $UserIdentityACL {
    return super.attach(address) as $UserIdentityACL;
  }
  override connect(signer: Signer): $UserIdentityACL__factory {
    return super.connect(signer) as $UserIdentityACL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $UserIdentityACLInterface {
    return new utils.Interface(_abi) as $UserIdentityACLInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $UserIdentityACL {
    return new Contract(address, _abi, signerOrProvider) as $UserIdentityACL;
  }
}
