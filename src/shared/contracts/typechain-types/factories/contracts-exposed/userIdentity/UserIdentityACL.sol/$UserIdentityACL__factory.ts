/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $UserIdentityACL,
  $UserIdentityACLInterface,
} from "../../../../contracts-exposed/userIdentity/UserIdentityACL.sol/$UserIdentityACL";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    name: "CallerNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arg0",
        type: "address",
      },
      {
        internalType: "address",
        name: "arg1",
        type: "address",
      },
    ],
    name: "$_allowedContractCalls",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "serviceProvider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approval",
        type: "bool",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedToExecuteCallFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610226806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630ff51e99146100465780632d1fb3891461009c57806379ee6b52146100ef575b600080fd5b61008861005436600461015f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020818152604080832033845290915290205460ff1690565b604051901515815260200160405180910390f35b6100ed6100aa366004610181565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff95909516835293905291909120805460ff1916911515919091179055565b005b6100886100fd3660046101bd565b73ffffffffffffffffffffffffffffffffffffffff91821660009081526020818152604080832093909416825291909152205460ff1690565b803573ffffffffffffffffffffffffffffffffffffffff8116811461015a57600080fd5b919050565b60006020828403121561017157600080fd5b61017a82610136565b9392505050565b6000806040838503121561019457600080fd5b61019d83610136565b9150602083013580151581146101b257600080fd5b809150509250929050565b600080604083850312156101d057600080fd5b6101d983610136565b91506101e760208401610136565b9050925092905056fea26469706673582212207bf402851bb4ac5254f61030ccddd97326791c9c0e0474c73d0867b844acbe7d64736f6c63430008100033";

type $UserIdentityACLConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $UserIdentityACLConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $UserIdentityACL__factory extends ContractFactory {
  constructor(...args: $UserIdentityACLConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$UserIdentityACL> {
    return super.deploy(overrides || {}) as Promise<$UserIdentityACL>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $UserIdentityACL {
    return super.attach(address) as $UserIdentityACL;
  }
  override connect(signer: Signer): $UserIdentityACL__factory {
    return super.connect(signer) as $UserIdentityACL__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $UserIdentityACLInterface {
    return new utils.Interface(_abi) as $UserIdentityACLInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $UserIdentityACL {
    return new Contract(address, _abi, signerOrProvider) as $UserIdentityACL;
  }
}
