/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  $UserIdentityFactory,
  $UserIdentityFactoryInterface,
} from "../../../../contracts-exposed/userIdentity/UserIdentityFactory.sol/$UserIdentityFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arg0",
        type: "address",
      },
      {
        internalType: "address",
        name: "arg1",
        type: "address",
      },
    ],
    name: "$_allowedContractCalls",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "serviceProvider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approval",
        type: "bool",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "createIdentity",
    outputs: [
      {
        internalType: "contract UserIdentity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getIdentity",
    outputs: [
      {
        internalType: "contract UserIdentity",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAllowedToExecuteCallFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "isAllowedToExecuteCallFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061200c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630ff51e991461006757806325d4a9be146100975780632d1fb389146100c75780632fea7b81146100e35780635b2ab06c1461011357806379ee6b5214610143575b600080fd5b610081600480360381019061007c91906107ec565b610173565b60405161008e9190610834565b60405180910390f35b6100b160048036038101906100ac919061084f565b610186565b6040516100be9190610834565b60405180910390f35b6100e160048036038101906100dc91906108bb565b61019a565b005b6100fd60048036038101906100f891906107ec565b610231565b60405161010a919061095a565b60405180910390f35b61012d600480360381019061012891906107ec565b6103a0565b60405161013a919061095a565b60405180910390f35b61015d6004803603810190610158919061084f565b610656565b60405161016a9190610834565b60405180910390f35b600061017f82336106e9565b9050919050565b600061019283836106e9565b905092915050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141580156102f657506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b1561033857336040517fe7557a5200000000000000000000000000000000000000000000000000000000815260040161032f9190610984565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b6000813373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561046557506000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16155b156104a757336040517fe7557a5200000000000000000000000000000000000000000000000000000000815260040161049e9190610984565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105ee5782306040516105489061077c565b61055392919061099f565b604051809103906000f08015801561056f573d6000803e3d6000fd5b50600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61160e806109c983390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b98261078e565b9050919050565b6107c9816107ae565b81146107d457600080fd5b50565b6000813590506107e6816107c0565b92915050565b60006020828403121561080257610801610789565b5b6000610810848285016107d7565b91505092915050565b60008115159050919050565b61082e81610819565b82525050565b60006020820190506108496000830184610825565b92915050565b6000806040838503121561086657610865610789565b5b6000610874858286016107d7565b9250506020610885858286016107d7565b9150509250929050565b61089881610819565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b600080604083850312156108d2576108d1610789565b5b60006108e0858286016107d7565b92505060206108f1858286016108a6565b9150509250929050565b6000819050919050565b600061092061091b6109168461078e565b6108fb565b61078e565b9050919050565b600061093282610905565b9050919050565b600061094482610927565b9050919050565b61095481610939565b82525050565b600060208201905061096f600083018461094b565b92915050565b61097e816107ae565b82525050565b60006020820190506109996000830184610975565b92915050565b60006040820190506109b46000830185610975565b6109c16020830184610975565b939250505056fe60806040523480156200001157600080fd5b506040516200160e3803806200160e83398181016040528101906200003791906200012a565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000171565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f282620000c5565b9050919050565b6200010481620000e5565b81146200011057600080fd5b50565b6000815190506200012481620000f9565b92915050565b60008060408385031215620001445762000143620000c0565b5b6000620001548582860162000113565b9250506020620001678582860162000113565b9150509250929050565b61148d80620001816000396000f3fe60806040526004361061004e5760003560e01c8063621091c2146100935780638058f478146100d0578063c89acc861461010d578063d26b117c1461013d578063d79f44eb1461017a5761008e565b3661008e577fb58278ed56aa79ad2e243963b44b165a8f76d629f61c01dd3649d658e0eacca43334604051610084929190610f68565b60405180910390a1005b600080fd5b34801561009f57600080fd5b506100ba60048036038101906100b5919061102c565b6101b7565b6040516100c791906110a7565b60405180910390f35b3480156100dc57600080fd5b506100f760048036038101906100f291906110c2565b610496565b60405161010491906110a7565b60405180910390f35b6101276004803603810190610122919061102c565b6107c2565b60405161013491906110a7565b60405180910390f35b34801561014957600080fd5b50610164600480360381019061015f9190611162565b610983565b60405161017191906110a7565b60405180910390f35b34801561018657600080fd5b506101a1600480360381019061019c919061102c565b610d50565b6040516101ae919061128c565b60405180910390f35b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325d4a9be60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b81526004016102369291906112ae565b602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102779190611303565b6102b857336040517fe7557a520000000000000000000000000000000000000000000000000000000081526004016102af9190611330565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1685856040516102e292919061138a565b6000604051808303816000865af19150503d806000811461031f576040519150601f19603f3d011682016040523d82523d6000602084013e610324565b606091505b50915091508161036b57806040517fd62cfc86000000000000000000000000000000000000000000000000000000008152600401610362919061128c565b60405180910390fd5b600047111561044b5760008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16476040516103bb906113c9565b60006040518083038185875af1925050503d80600081146103f8576040519150601f19603f3d011682016040523d82523d6000602084013e6103fd565b606091505b50915091508161044457806040517fd62cfc8600000000000000000000000000000000000000000000000000000000815260040161043b919061128c565b60405180910390fd5b505061048a565b33866040517f1e16cb1b0000000000000000000000000000000000000000000000000000000081526004016104819291906112ae565b60405180910390fd5b81925050509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325d4a9be60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b81526004016105159291906112ae565b602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190611303565b61059757336040517fe7557a5200000000000000000000000000000000000000000000000000000000815260040161058e9190611330565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1686866040516105c192919061138a565b6000604051808303816000865af19150503d80600081146105fe576040519150601f19603f3d011682016040523d82523d6000602084013e610603565b606091505b50915091508161064a57806040517fd62cfc86000000000000000000000000000000000000000000000000000000008152600401610641919061128c565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106859190611330565b602060405180830381865afa1580156106a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c691906113f3565b90506000811115610775578473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161072c929190610f68565b6020604051808303816000875af115801561074b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076f9190611303565b506107b4565b33886040517f1e16cb1b0000000000000000000000000000000000000000000000000000000081526004016107ab9291906112ae565b60405180910390fd5b829350505050949350505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325d4a9be60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b81526004016108419291906112ae565b602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190611303565b6108c357336040517fe7557a520000000000000000000000000000000000000000000000000000000081526004016108ba9190611330565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff163486866040516108ee92919061138a565b60006040518083038185875af1925050503d806000811461092b576040519150601f19603f3d011682016040523d82523d6000602084013e610930565b606091505b50915091508161097757806040517fd62cfc8600000000000000000000000000000000000000000000000000000000815260040161096e919061128c565b60405180910390fd5b81925050509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325d4a9be60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b8152600401610a029291906112ae565b602060405180830381865afa158015610a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a439190611303565b610a8457336040517fe7557a52000000000000000000000000000000000000000000000000000000008152600401610a7b9190611330565b60405180910390fd5b60008473ffffffffffffffffffffffffffffffffffffffff166370a0823160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610adf9190611330565b602060405180830381865afa158015610afc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2091906113f3565b9050838110610c4e578473ffffffffffffffffffffffffffffffffffffffff166323b872dd60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1630876040518463ffffffff1660e01b8152600401610b8693929190611420565b6020604051808303816000875af1158015610ba5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc99190611303565b508473ffffffffffffffffffffffffffffffffffffffff1663095ea7b384866040518363ffffffff1660e01b8152600401610c05929190610f68565b6020604051808303816000875af1158015610c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c489190611303565b50610c8d565b33886040517f1e16cb1b000000000000000000000000000000000000000000000000000000008152600401610c849291906112ae565b60405180910390fd5b6000808973ffffffffffffffffffffffffffffffffffffffff168989604051610cb792919061138a565b6000604051808303816000865af19150503d8060008114610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b509150915081610d4057806040517fd62cfc86000000000000000000000000000000000000000000000000000000008152600401610d37919061128c565b60405180910390fd5b8193505050509695505050505050565b6060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166325d4a9be60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336040518363ffffffff1660e01b8152600401610dcf9291906112ae565b602060405180830381865afa158015610dec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e109190611303565b610e5157336040517fe7557a52000000000000000000000000000000000000000000000000000000008152600401610e489190611330565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168585604051610e7b92919061138a565b600060405180830381855afa9150503d8060008114610eb6576040519150601f19603f3d011682016040523d82523d6000602084013e610ebb565b606091505b509150915081610f0257806040517fd62cfc86000000000000000000000000000000000000000000000000000000008152600401610ef9919061128c565b60405180910390fd5b80925050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3982610f0e565b9050919050565b610f4981610f2e565b82525050565b6000819050919050565b610f6281610f4f565b82525050565b6000604082019050610f7d6000830185610f40565b610f8a6020830184610f59565b9392505050565b600080fd5b600080fd5b610fa481610f2e565b8114610faf57600080fd5b50565b600081359050610fc181610f9b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fec57610feb610fc7565b5b8235905067ffffffffffffffff81111561100957611008610fcc565b5b60208301915083600182028301111561102557611024610fd1565b5b9250929050565b60008060006040848603121561104557611044610f91565b5b600061105386828701610fb2565b935050602084013567ffffffffffffffff81111561107457611073610f96565b5b61108086828701610fd6565b92509250509250925092565b60008115159050919050565b6110a18161108c565b82525050565b60006020820190506110bc6000830184611098565b92915050565b600080600080606085870312156110dc576110db610f91565b5b60006110ea87828801610fb2565b945050602085013567ffffffffffffffff81111561110b5761110a610f96565b5b61111787828801610fd6565b9350935050604061112a87828801610fb2565b91505092959194509250565b61113f81610f4f565b811461114a57600080fd5b50565b60008135905061115c81611136565b92915050565b60008060008060008060a0878903121561117f5761117e610f91565b5b600061118d89828a01610fb2565b965050602087013567ffffffffffffffff8111156111ae576111ad610f96565b5b6111ba89828a01610fd6565b955095505060406111cd89828a01610fb2565b93505060606111de89828a0161114d565b92505060806111ef89828a01610fb2565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b8381101561123657808201518184015260208101905061121b565b60008484015250505050565b6000601f19601f8301169050919050565b600061125e826111fc565b6112688185611207565b9350611278818560208601611218565b61128181611242565b840191505092915050565b600060208201905081810360008301526112a68184611253565b905092915050565b60006040820190506112c36000830185610f40565b6112d06020830184610f40565b9392505050565b6112e08161108c565b81146112eb57600080fd5b50565b6000815190506112fd816112d7565b92915050565b60006020828403121561131957611318610f91565b5b6000611327848285016112ee565b91505092915050565b60006020820190506113456000830184610f40565b92915050565b600081905092915050565b82818337600083830152505050565b6000611371838561134b565b935061137e838584611356565b82840190509392505050565b6000611397828486611365565b91508190509392505050565b50565b60006113b360008361134b565b91506113be826113a3565b600082019050919050565b60006113d4826113a6565b9150819050919050565b6000815190506113ed81611136565b92915050565b60006020828403121561140957611408610f91565b5b6000611417848285016113de565b91505092915050565b60006060820190506114356000830186610f40565b6114426020830185610f40565b61144f6040830184610f59565b94935050505056fea2646970667358221220129d70c3c24c761feff8effb909f94cafe8324a7c988168b7716948c5bf4dcf264736f6c63430008100033a26469706673582212201a15d4ff6db9c5c9fe0c87bc35b5f6082cd185c8d44edb35d11e9c77485ea00c64736f6c63430008100033";

type $UserIdentityFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: $UserIdentityFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class $UserIdentityFactory__factory extends ContractFactory {
  constructor(...args: $UserIdentityFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<$UserIdentityFactory> {
    return super.deploy(overrides || {}) as Promise<$UserIdentityFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): $UserIdentityFactory {
    return super.attach(address) as $UserIdentityFactory;
  }
  override connect(signer: Signer): $UserIdentityFactory__factory {
    return super.connect(signer) as $UserIdentityFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): $UserIdentityFactoryInterface {
    return new utils.Interface(_abi) as $UserIdentityFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): $UserIdentityFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as $UserIdentityFactory;
  }
}
