/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FeeManager,
  FeeManagerInterface,
} from "../../../contracts/feeManager/FeeManager";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "RBTCTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "fundBeneficiary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105c0806100206000396000f3fe6080604052600436106100335760003560e01c8062a4e863146100385780632e1a7d4d14610054578063f8b2cb4f1461007d575b600080fd5b610052600480360381019061004d91906103f3565b6100ba565b005b34801561006057600080fd5b5061007b60048036038101906100769190610456565b610190565b005b34801561008957600080fd5b506100a4600480360381019061009f91906103f3565b610348565b6040516100b19190610492565b60405180910390f35b600034036100f4576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461014291906104dc565b92505081905550348173ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60405160405180910390a350565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115610208576040517f356680b700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102569190610510565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161028390610575565b60006040518083038185875af1925050503d80600081146102c0576040519150601f19603f3d011682016040523d82523d6000602084013e6102c5565b606091505b5050905080610300576040517f5b8688af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436460405160405180910390a35050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c082610395565b9050919050565b6103d0816103b5565b81146103db57600080fd5b50565b6000813590506103ed816103c7565b92915050565b60006020828403121561040957610408610390565b5b6000610417848285016103de565b91505092915050565b6000819050919050565b61043381610420565b811461043e57600080fd5b50565b6000813590506104508161042a565b92915050565b60006020828403121561046c5761046b610390565b5b600061047a84828501610441565b91505092915050565b61048c81610420565b82525050565b60006020820190506104a76000830184610483565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104e782610420565b91506104f283610420565b925082820190508082111561050a576105096104ad565b5b92915050565b600061051b82610420565b915061052683610420565b925082820390508181111561053e5761053d6104ad565b5b92915050565b600081905092915050565b50565b600061055f600083610544565b915061056a8261054f565b600082019050919050565b600061058082610552565b915081905091905056fea2646970667358221220e99e5099a1ae6b2689b9f9a9faf99f74aa6c549f7ebf704e35eda0080fae8b6d64736f6c63430008100033";

type FeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeManager__factory extends ContractFactory {
  constructor(...args: FeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FeeManager> {
    return super.deploy(overrides || {}) as Promise<FeeManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeeManager {
    return super.attach(address) as FeeManager;
  }
  override connect(signer: Signer): FeeManager__factory {
    return super.connect(signer) as FeeManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeManagerInterface {
    return new utils.Interface(_abi) as FeeManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeManager {
    return new Contract(address, _abi, signerOrProvider) as FeeManager;
  }
}
