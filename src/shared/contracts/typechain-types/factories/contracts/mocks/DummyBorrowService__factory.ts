/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyBorrowService,
  DummyBorrowServiceInterface,
} from "../../../contracts/mocks/DummyBorrowService";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ACME",
        name: "acme",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Lend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "addListing",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "calculateRequiredCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "currentLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "disableListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loanToValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "loanToValueTokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "enum PayBackOption",
        name: "payBackOption",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceProviderName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceType",
    outputs: [
      {
        internalType: "enum ServiceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620028b2380380620028b283398181016040528101906200003791906200024e565b6040518060400160405280600481526020017f41434d45000000000000000000000000000000000000000000000000000000008152506200008d620000816200010460201b60201c565b6200010c60201b60201c565b6001600060146101000a81548160ff02191690836001811115620000b657620000b562000280565b5b02179055505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002af565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020282620001d5565b9050919050565b60006200021682620001f5565b9050919050565b620002288162000209565b81146200023457600080fd5b50565b60008151905062000248816200021d565b92915050565b600060208284031215620002675762000266620001d0565b5b6000620002778482850162000237565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6125f380620002bf6000396000f3fe60806040526004361061011f5760003560e01c80639d7de6b3116100a0578063dc419a0911610064578063dc419a091461037f578063de74e57b146103bc578063e390d4df14610404578063f2fde38b14610441578063f8b2cb4f1461046a5761011f565b80639d7de6b314610298578063c84216a2146102c1578063cbaa068f146102ec578063cd1bef2114610317578063db0881a1146103545761011f565b80635c3fec1e116100e75780635c3fec1e146101e8578063715018a6146102115780638327c214146102285780638da5cb5b146102445780639cd441da1461026f5761011f565b80630313766f14610124578063107a274a146101405780631529a6391461017d5780633ccfd60b146101a85780634085aaac146101bf575b600080fd5b61013e60048036038101906101399190611565565b6104a7565b005b34801561014c57600080fd5b50610167600480360381019061016291906115b8565b6106c7565b6040516101749190611829565b60405180910390f35b34801561018957600080fd5b506101926108cf565b60405161019f919061185a565b60405180910390f35b3480156101b457600080fd5b506101bd6108d4565b005b3480156101cb57600080fd5b506101e660048036038101906101e19190611b43565b6108d6565b005b3480156101f457600080fd5b5061020f600480360381019061020a91906115b8565b610a3a565b005b34801561021d57600080fd5b50610226610a74565b005b610242600480360381019061023d9190611b8c565b610a88565b005b34801561025057600080fd5b50610259610d14565b6040516102669190611c02565b60405180910390f35b34801561027b57600080fd5b5061029660048036038101906102919190611c1d565b610d3d565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611c1d565b610d76565b005b3480156102cd57600080fd5b506102d6610d8c565b6040516102e39190611ca7565b60405180910390f35b3480156102f857600080fd5b50610301610e1a565b60405161030e919061185a565b60405180910390f35b34801561032357600080fd5b5061033e600480360381019061033991906115b8565b610e24565b60405161034b919061185a565b60405180910390f35b34801561036057600080fd5b50610369610e44565b6040516103769190611d11565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a19190611b43565b610e57565b6040516103b3919061185a565b60405180910390f35b3480156103c857600080fd5b506103e360048036038101906103de91906115b8565b61102d565b6040516103fb9c9b9a99989796959493929190611d4a565b60405180910390f35b34801561041057600080fd5b5061042b60048036038101906104269190611e0b565b61116f565b604051610438919061185a565b60405180910390f35b34801561044d57600080fd5b5061046860048036038101906104639190611e4b565b611177565b005b34801561047657600080fd5b50610491600480360381019061048c9190611e4b565b6111fa565b60405161049e919061185a565b60405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016104e493929190611e78565b6020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190611ec4565b508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610585929190611ef1565b6020604051808303816000875af11580156105a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c89190611ec4565b50600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631edd0c6c838530336040518563ffffffff1660e01b815260040161062a9493929190611f1a565b600060405180830381600087803b15801561064457600080fd5b505af1158015610658573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fece4e547ae0655a2613e99bed9e2f496b3b3dd8b0768cfbae0a6070b05782cea866040516106ba919061185a565b60405180910390a4505050565b6106cf61141c565b6002600083815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff16600381111561080557610804611603565b5b600381111561081757610816611603565b5b81526020016008820160159054906101000a900460ff1615151515815260200160098201805461084690611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461087290611f8e565b80156108bf5780601f10610894576101008083540402835291602001916108bf565b820191906000526020600020905b8154815290600101906020018083116108a257829003601f168201915b5050505050815250509050919050565b600090565b565b6108de6112a1565b806002600083600001518152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff021916908360038111156109f7576109f6611603565b5b02179055506101408201518160080160156101000a81548160ff021916908315150217905550610160820151816009019081610a33919061216b565b5090505050565b610a426112a1565b60006002600083815260200190815260200160002060080160156101000a81548160ff02191690831515021790555050565b610a7c6112a1565b610a86600061131f565b565b60003403610acd57346040517f3728b83d000000000000000000000000000000000000000000000000000000008152600401610ac4919061185a565b60405180910390fd5b60026000838152602001908152602001600020600201548410610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1c90612289565b60405180910390fd5b60026000838152602001908152602001600020600101548411610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b74906122f5565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff1660e01b8152600401610bd99190611c02565b6000604051808303818588803b158015610bf257600080fd5b505af1158015610c06573d6000803e3d6000fd5b5050505050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b13f0de88486336040518463ffffffff1660e01b8152600401610c6a93929190612315565b600060405180830381600087803b158015610c8457600080fd5b505af1158015610c98573d6000803e3d6000fd5b50505050610ca684836113e3565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16837fef18174796a5d2f91d51dc5e907a4d7867bbd6e800f6225168e0453d581d0dcd8785604051610d0692919061234c565b60405180910390a450505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d456112a1565b81600260008381526020019081526020016000206002016000828254610d6b91906123a4565b925050819055505050565b610d7e6112a1565b610d8882826113e3565b5050565b60018054610d9990611f8e565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc590611f8e565b8015610e125780601f10610de757610100808354040283529160200191610e12565b820191906000526020600020905b815481529060010190602001808311610df557829003601f168201915b505050505081565b6000600354905090565b600060026000838152602001908152602001600020600201549050919050565b600060149054906101000a900460ff1681565b6000610e616112a1565b600060036000815480929190610e76906123d8565b919050559050808360000181815250508260026000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff02191690836003811115610f9b57610f9a611603565b5b02179055506101408201518160080160156101000a81548160ff021916908315150217905550610160820151816009019081610fd7919061216b565b509050508083610100015173ffffffffffffffffffffffffffffffffffffffff167ff060b874355dd22d0bc251d61fca3b6d902778149a3048748276c9ee78ead56c60405160405180910390a380915050919050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160149054906101000a900460ff16908060080160159054906101000a900460ff16908060090180546110ec90611f8e565b80601f016020809104026020016040519081016040528092919081815260200182805461111890611f8e565b80156111655780601f1061113a57610100808354040283529160200191611165565b820191906000526020600020905b81548152906001019060200180831161114857829003601f168201915b505050505090508c565b600092915050565b61117f6112a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e590612492565b60405180910390fd5b6111f78161131f565b50565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166358bd5c2083336040518363ffffffff1660e01b81526004016112599291906124b2565b602060405180830381865afa158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a91906124f0565b9050919050565b6112a9611414565b73ffffffffffffffffffffffffffffffffffffffff166112c7610d14565b73ffffffffffffffffffffffffffffffffffffffff161461131d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131490612569565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b816002600083815260200190815260200160002060020160008282546114099190612589565b925050819055505050565b600033905090565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156114a7576114a6611603565b5b8152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6114e4816114d1565b81146114ef57600080fd5b50565b600081359050611501816114db565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061153282611507565b9050919050565b61154281611527565b811461154d57600080fd5b50565b60008135905061155f81611539565b92915050565b60008060006060848603121561157e5761157d6114c7565b5b600061158c868287016114f2565b935050602061159d86828701611550565b92505060406115ae868287016114f2565b9150509250925092565b6000602082840312156115ce576115cd6114c7565b5b60006115dc848285016114f2565b91505092915050565b6115ee816114d1565b82525050565b6115fd81611527565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061164357611642611603565b5b50565b600081905061165482611632565b919050565b600061166482611646565b9050919050565b61167481611659565b82525050565b60008115159050919050565b61168f8161167a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116cf5780820151818401526020810190506116b4565b60008484015250505050565b6000601f19601f8301169050919050565b60006116f782611695565b61170181856116a0565b93506117118185602086016116b1565b61171a816116db565b840191505092915050565b60006101808301600083015161173e60008601826115e5565b50602083015161175160208601826115e5565b50604083015161176460408601826115e5565b50606083015161177760608601826115e5565b50608083015161178a60808601826115e5565b5060a083015161179d60a08601826115e5565b5060c08301516117b060c08601826115e5565b5060e08301516117c360e08601826115f4565b506101008301516117d86101008601826115f4565b506101208301516117ed61012086018261166b565b50610140830151611802610140860182611686565b5061016083015184820361016086015261181c82826116ec565b9150508091505092915050565b600060208201905081810360008301526118438184611725565b905092915050565b611854816114d1565b82525050565b600060208201905061186f600083018461184b565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b2826116db565b810181811067ffffffffffffffff821117156118d1576118d061187a565b5b80604052505050565b60006118e46114bd565b90506118f082826118a9565b919050565b600080fd5b6004811061190757600080fd5b50565b600081359050611919816118fa565b92915050565b6119288161167a565b811461193357600080fd5b50565b6000813590506119458161191f565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156119705761196f61187a565b5b611979826116db565b9050602081019050919050565b82818337600083830152505050565b60006119a86119a384611955565b6118da565b9050828152602081018484840111156119c4576119c3611950565b5b6119cf848285611986565b509392505050565b600082601f8301126119ec576119eb61194b565b5b81356119fc848260208601611995565b91505092915050565b60006101808284031215611a1c57611a1b611875565b5b611a276101806118da565b90506000611a37848285016114f2565b6000830152506020611a4b848285016114f2565b6020830152506040611a5f848285016114f2565b6040830152506060611a73848285016114f2565b6060830152506080611a87848285016114f2565b60808301525060a0611a9b848285016114f2565b60a08301525060c0611aaf848285016114f2565b60c08301525060e0611ac384828501611550565b60e083015250610100611ad884828501611550565b61010083015250610120611aee8482850161190a565b61012083015250610140611b0484828501611936565b6101408301525061016082013567ffffffffffffffff811115611b2a57611b296118f5565b5b611b36848285016119d7565b6101608301525092915050565b600060208284031215611b5957611b586114c7565b5b600082013567ffffffffffffffff811115611b7757611b766114cc565b5b611b8384828501611a05565b91505092915050565b60008060008060808587031215611ba657611ba56114c7565b5b6000611bb4878288016114f2565b9450506020611bc587828801611550565b9350506040611bd6878288016114f2565b9250506060611be7878288016114f2565b91505092959194509250565b611bfc81611527565b82525050565b6000602082019050611c176000830184611bf3565b92915050565b60008060408385031215611c3457611c336114c7565b5b6000611c42858286016114f2565b9250506020611c53858286016114f2565b9150509250929050565b600082825260208201905092915050565b6000611c7982611695565b611c838185611c5d565b9350611c938185602086016116b1565b611c9c816116db565b840191505092915050565b60006020820190508181036000830152611cc18184611c6e565b905092915050565b60028110611cda57611cd9611603565b5b50565b6000819050611ceb82611cc9565b919050565b6000611cfb82611cdd565b9050919050565b611d0b81611cf0565b82525050565b6000602082019050611d266000830184611d02565b92915050565b611d3581611659565b82525050565b611d448161167a565b82525050565b600061018082019050611d60600083018f61184b565b611d6d602083018e61184b565b611d7a604083018d61184b565b611d87606083018c61184b565b611d94608083018b61184b565b611da160a083018a61184b565b611dae60c083018961184b565b611dbb60e0830188611bf3565b611dc9610100830187611bf3565b611dd7610120830186611d2c565b611de5610140830185611d3b565b818103610160830152611df88184611c6e565b90509d9c50505050505050505050505050565b60008060408385031215611e2257611e216114c7565b5b6000611e30858286016114f2565b9250506020611e4185828601611550565b9150509250929050565b600060208284031215611e6157611e606114c7565b5b6000611e6f84828501611550565b91505092915050565b6000606082019050611e8d6000830186611bf3565b611e9a6020830185611bf3565b611ea7604083018461184b565b949350505050565b600081519050611ebe8161191f565b92915050565b600060208284031215611eda57611ed96114c7565b5b6000611ee884828501611eaf565b91505092915050565b6000604082019050611f066000830185611bf3565b611f13602083018461184b565b9392505050565b6000608082019050611f2f6000830187611bf3565b611f3c602083018661184b565b611f496040830185611bf3565b611f566060830184611bf3565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa657607f821691505b602082108103611fb957611fb8611f5f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611fe4565b61202b8683611fe4565b95508019841693508086168417925050509392505050565b6000819050919050565b600061206861206361205e846114d1565b612043565b6114d1565b9050919050565b6000819050919050565b6120828361204d565b61209661208e8261206f565b848454611ff1565b825550505050565b600090565b6120ab61209e565b6120b6818484612079565b505050565b5b818110156120da576120cf6000826120a3565b6001810190506120bc565b5050565b601f82111561211f576120f081611fbf565b6120f984611fd4565b81016020851015612108578190505b61211c61211485611fd4565b8301826120bb565b50505b505050565b600082821c905092915050565b600061214260001984600802612124565b1980831691505092915050565b600061215b8383612131565b9150826002028217905092915050565b61217482611695565b67ffffffffffffffff81111561218d5761218c61187a565b5b6121978254611f8e565b6121a28282856120de565b600060209050601f8311600181146121d557600084156121c3578287015190505b6121cd858261214f565b865550612235565b601f1984166121e386611fbf565b60005b8281101561220b578489015182556001820191506020850194506020810190506121e6565b868310156122285784890151612224601f891682612131565b8355505b6001600288020188555050505b505050505050565b7f4c69717569646974792065786365656465640000000000000000000000000000600082015250565b6000612273601283611c5d565b915061227e8261223d565b602082019050919050565b600060208201905081810360008301526122a281612266565b9050919050565b7f4d696e20616d6f756e74206e6f74206d65740000000000000000000000000000600082015250565b60006122df601283611c5d565b91506122ea826122a9565b602082019050919050565b6000602082019050818103600083015261230e816122d2565b9050919050565b600060608201905061232a6000830186611bf3565b612337602083018561184b565b6123446040830184611bf3565b949350505050565b6000604082019050612361600083018561184b565b61236e602083018461184b565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123af826114d1565b91506123ba836114d1565b92508282019050808211156123d2576123d1612375565b5b92915050565b60006123e3826114d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361241557612414612375565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061247c602683611c5d565b915061248782612420565b604082019050919050565b600060208201905081810360008301526124ab8161246f565b9050919050565b60006040820190506124c76000830185611bf3565b6124d46020830184611bf3565b9392505050565b6000815190506124ea816114db565b92915050565b600060208284031215612506576125056114c7565b5b6000612514848285016124db565b91505092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612553602083611c5d565b915061255e8261251d565b602082019050919050565b6000602082019050818103600083015261258281612546565b9050919050565b6000612594826114d1565b915061259f836114d1565b92508282039050818111156125b7576125b6612375565b5b9291505056fea2646970667358221220ddf7cb52f0afcc0e4b4297cc5195cc837882d46e0cb9abcd1b5ee1a9d1ec69d064736f6c63430008100033";

type DummyBorrowServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyBorrowServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyBorrowService__factory extends ContractFactory {
  constructor(...args: DummyBorrowServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    acme: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyBorrowService> {
    return super.deploy(acme, overrides || {}) as Promise<DummyBorrowService>;
  }
  override getDeployTransaction(
    acme: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(acme, overrides || {});
  }
  override attach(address: string): DummyBorrowService {
    return super.attach(address) as DummyBorrowService;
  }
  override connect(signer: Signer): DummyBorrowService__factory {
    return super.connect(signer) as DummyBorrowService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyBorrowServiceInterface {
    return new utils.Interface(_abi) as DummyBorrowServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyBorrowService {
    return new Contract(address, _abi, signerOrProvider) as DummyBorrowService;
  }
}
