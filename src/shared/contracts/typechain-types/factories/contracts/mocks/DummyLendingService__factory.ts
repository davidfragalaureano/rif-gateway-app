/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DummyLendingService,
  DummyLendingServiceInterface,
} from "../../../contracts/mocks/DummyLendingService";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ACME",
        name: "acme",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "Borrow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Lend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Pay",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "withdrawer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "addListing",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "disableListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loanToValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "loanToValueTokenAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "enum PayBackOption",
        name: "payBackOption",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceProviderName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceType",
    outputs: [
      {
        internalType: "enum ServiceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDuration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "loanToValue",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "loanToValueTokenAddr",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "enum PayBackOption",
            name: "payBackOption",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct ServiceListing",
        name: "listing",
        type: "tuple",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200216b3803806200216b83398181016040528101906200003791906200024d565b6040518060400160405280600481526020017f41434d45000000000000000000000000000000000000000000000000000000008152506200008d620000816200010360201b60201c565b6200010b60201b60201c565b60008060146101000a81548160ff02191690836001811115620000b557620000b46200027f565b5b02179055505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002ae565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020182620001d4565b9050919050565b60006200021582620001f4565b9050919050565b620002278162000208565b81146200023357600080fd5b50565b60008151905062000247816200021c565b92915050565b600060208284031215620002665762000265620001cf565b5b6000620002768482850162000236565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611ead80620002be6000396000f3fe6080604052600436106100dd5760003560e01c8063c84216a21161007f578063dc419a0911610059578063dc419a0914610255578063de74e57b14610292578063f2fde38b146102da578063f8b2cb4f14610303576100dd565b8063c84216a2146101d4578063cbaa068f146101ff578063db0881a11461022a576100dd565b80635c3fec1e116100bb5780635c3fec1e1461015f578063715018a6146101885780638da5cb5b1461019f57806397dffc61146101ca576100dd565b8063107a274a146100e25780633ccfd60b1461011f5780634085aaac14610136575b600080fd5b3480156100ee57600080fd5b506101096004803603810190610104919061113b565b610340565b60405161011691906113de565b60405180910390f35b34801561012b57600080fd5b50610134610548565b005b34801561014257600080fd5b5061015d600480360381019061015891906116fa565b6106ef565b005b34801561016b57600080fd5b506101866004803603810190610181919061113b565b610853565b005b34801561019457600080fd5b5061019d61088d565b005b3480156101ab57600080fd5b506101b46108a1565b6040516101c19190611752565b60405180910390f35b6101d26108ca565b005b3480156101e057600080fd5b506101e9610a07565b6040516101f691906117b7565b60405180910390f35b34801561020b57600080fd5b50610214610a95565b60405161022191906117e8565b60405180910390f35b34801561023657600080fd5b5061023f610a9f565b60405161024c919061184b565b60405180910390f35b34801561026157600080fd5b5061027c600480360381019061027791906116fa565b610ab2565b60405161028991906117e8565b60405180910390f35b34801561029e57600080fd5b506102b960048036038101906102b4919061113b565b610c88565b6040516102d19c9b9a99989796959493929190611884565b60405180910390f35b3480156102e657600080fd5b5061030160048036038101906102fc9190611945565b610dca565b005b34801561030f57600080fd5b5061032a60048036038101906103259190611945565b610e4d565b60405161033791906117e8565b60405180910390f35b610348611050565b6002600083815260200190815260200160002060405180610180016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016008820160149054906101000a900460ff16600381111561047e5761047d6111b8565b5b60038111156104905761048f6111b8565b5b81526020016008820160159054906101000a900460ff161515151581526020016009820180546104bf906119a1565b80601f01602080910402602001604051908101604052809291908181526020018280546104eb906119a1565b80156105385780601f1061050d57610100808354040283529160200191610538565b820191906000526020600020905b81548152906001019060200180831161051b57829003601f168201915b5050505050815250509050919050565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f336040518263ffffffff1660e01b81526004016105a69190611752565b6040805180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e691906119e7565b91509150600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662f714ce83336040518363ffffffff1660e01b8152600401610646929190611a27565b600060405180830381600087803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b50505050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1660007ffeb2000dca3e617cd6f3a8bbb63014bb54a124aac6ccbf73ee7229b4cd01f12084866106d69190611a7f565b6040516106e391906117e8565b60405180910390a45050565b6106f7610f06565b806002600083600001518152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff021916908360038111156108105761080f6111b8565b5b02179055506101408201518160080160156101000a81548160ff02191690831515021790555061016082015181600901908161084c9190611c5f565b5090505050565b61085b610f06565b60006002600083815260200190815260200160002060080160156101000a81548160ff02191690831515021790555050565b610895610f06565b61089f6000610f84565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000340361090f57346040517f3728b83d00000000000000000000000000000000000000000000000000000000815260040161090691906117e8565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff1660e01b815260040161096b9190611752565b6000604051808303818588803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b5050505050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1660007f77c494147cc26c9ccb1f3f1926fb5bffa128633d935fdf7147dff0da6f740db4346040516109fd91906117e8565b60405180910390a4565b60018054610a14906119a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a40906119a1565b8015610a8d5780601f10610a6257610100808354040283529160200191610a8d565b820191906000526020600020905b815481529060010190602001808311610a7057829003601f168201915b505050505081565b6000600354905090565b600060149054906101000a900460ff1681565b6000610abc610f06565b600060036000815480929190610ad190611d31565b919050559050808360000181815250508260026000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160080160146101000a81548160ff02191690836003811115610bf657610bf56111b8565b5b02179055506101408201518160080160156101000a81548160ff021916908315150217905550610160820151816009019081610c329190611c5f565b509050508083610100015173ffffffffffffffffffffffffffffffffffffffff167ff060b874355dd22d0bc251d61fca3b6d902778149a3048748276c9ee78ead56c60405160405180910390a380915050919050565b60026020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160149054906101000a900460ff16908060080160159054906101000a900460ff1690806009018054610d47906119a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610d73906119a1565b8015610dc05780601f10610d9557610100808354040283529160200191610dc0565b820191906000526020600020905b815481529060010190602001808311610da357829003601f168201915b505050505090508c565b610dd2610f06565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3890611deb565b60405180910390fd5b610e4a81610f84565b50565b6000806000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f336040518263ffffffff1660e01b8152600401610ead9190611752565b6040805180830381865afa158015610ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eed91906119e7565b915091508082610efd9190611a7f565b92505050919050565b610f0e611048565b73ffffffffffffffffffffffffffffffffffffffff16610f2c6108a1565b73ffffffffffffffffffffffffffffffffffffffff1614610f82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7990611e57565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060038111156110db576110da6111b8565b5b8152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61111881611105565b811461112357600080fd5b50565b6000813590506111358161110f565b92915050565b600060208284031215611151576111506110fb565b5b600061115f84828501611126565b91505092915050565b61117181611105565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111a282611177565b9050919050565b6111b281611197565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106111f8576111f76111b8565b5b50565b6000819050611209826111e7565b919050565b6000611219826111fb565b9050919050565b6112298161120e565b82525050565b60008115159050919050565b6112448161122f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611284578082015181840152602081019050611269565b60008484015250505050565b6000601f19601f8301169050919050565b60006112ac8261124a565b6112b68185611255565b93506112c6818560208601611266565b6112cf81611290565b840191505092915050565b6000610180830160008301516112f36000860182611168565b5060208301516113066020860182611168565b5060408301516113196040860182611168565b50606083015161132c6060860182611168565b50608083015161133f6080860182611168565b5060a083015161135260a0860182611168565b5060c083015161136560c0860182611168565b5060e083015161137860e08601826111a9565b5061010083015161138d6101008601826111a9565b506101208301516113a2610120860182611220565b506101408301516113b761014086018261123b565b506101608301518482036101608601526113d182826112a1565b9150508091505092915050565b600060208201905081810360008301526113f881846112da565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61143d82611290565b810181811067ffffffffffffffff8211171561145c5761145b611405565b5b80604052505050565b600061146f6110f1565b905061147b8282611434565b919050565b600080fd5b61148e81611197565b811461149957600080fd5b50565b6000813590506114ab81611485565b92915050565b600481106114be57600080fd5b50565b6000813590506114d0816114b1565b92915050565b6114df8161122f565b81146114ea57600080fd5b50565b6000813590506114fc816114d6565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561152757611526611405565b5b61153082611290565b9050602081019050919050565b82818337600083830152505050565b600061155f61155a8461150c565b611465565b90508281526020810184848401111561157b5761157a611507565b5b61158684828561153d565b509392505050565b600082601f8301126115a3576115a2611502565b5b81356115b384826020860161154c565b91505092915050565b600061018082840312156115d3576115d2611400565b5b6115de610180611465565b905060006115ee84828501611126565b600083015250602061160284828501611126565b602083015250604061161684828501611126565b604083015250606061162a84828501611126565b606083015250608061163e84828501611126565b60808301525060a061165284828501611126565b60a08301525060c061166684828501611126565b60c08301525060e061167a8482850161149c565b60e08301525061010061168f8482850161149c565b610100830152506101206116a5848285016114c1565b610120830152506101406116bb848285016114ed565b6101408301525061016082013567ffffffffffffffff8111156116e1576116e0611480565b5b6116ed8482850161158e565b6101608301525092915050565b6000602082840312156117105761170f6110fb565b5b600082013567ffffffffffffffff81111561172e5761172d611100565b5b61173a848285016115bc565b91505092915050565b61174c81611197565b82525050565b60006020820190506117676000830184611743565b92915050565b600082825260208201905092915050565b60006117898261124a565b611793818561176d565b93506117a3818560208601611266565b6117ac81611290565b840191505092915050565b600060208201905081810360008301526117d1818461177e565b905092915050565b6117e281611105565b82525050565b60006020820190506117fd60008301846117d9565b92915050565b60028110611814576118136111b8565b5b50565b600081905061182582611803565b919050565b600061183582611817565b9050919050565b6118458161182a565b82525050565b6000602082019050611860600083018461183c565b92915050565b61186f8161120e565b82525050565b61187e8161122f565b82525050565b60006101808201905061189a600083018f6117d9565b6118a7602083018e6117d9565b6118b4604083018d6117d9565b6118c1606083018c6117d9565b6118ce608083018b6117d9565b6118db60a083018a6117d9565b6118e860c08301896117d9565b6118f560e0830188611743565b611903610100830187611743565b611911610120830186611866565b61191f610140830185611875565b818103610160830152611932818461177e565b90509d9c50505050505050505050505050565b60006020828403121561195b5761195a6110fb565b5b60006119698482850161149c565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119b957607f821691505b6020821081036119cc576119cb611972565b5b50919050565b6000815190506119e18161110f565b92915050565b600080604083850312156119fe576119fd6110fb565b5b6000611a0c858286016119d2565b9250506020611a1d858286016119d2565b9150509250929050565b6000604082019050611a3c60008301856117d9565b611a496020830184611743565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a8a82611105565b9150611a9583611105565b9250828201905080821115611aad57611aac611a50565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611b157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ad8565b611b1f8683611ad8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b5c611b57611b5284611105565b611b37565b611105565b9050919050565b6000819050919050565b611b7683611b41565b611b8a611b8282611b63565b848454611ae5565b825550505050565b600090565b611b9f611b92565b611baa818484611b6d565b505050565b5b81811015611bce57611bc3600082611b97565b600181019050611bb0565b5050565b601f821115611c1357611be481611ab3565b611bed84611ac8565b81016020851015611bfc578190505b611c10611c0885611ac8565b830182611baf565b50505b505050565b600082821c905092915050565b6000611c3660001984600802611c18565b1980831691505092915050565b6000611c4f8383611c25565b9150826002028217905092915050565b611c688261124a565b67ffffffffffffffff811115611c8157611c80611405565b5b611c8b82546119a1565b611c96828285611bd2565b600060209050601f831160018114611cc95760008415611cb7578287015190505b611cc18582611c43565b865550611d29565b601f198416611cd786611ab3565b60005b82811015611cff57848901518255600182019150602085019450602081019050611cda565b86831015611d1c5784890151611d18601f891682611c25565b8355505b6001600288020188555050505b505050505050565b6000611d3c82611105565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d6e57611d6d611a50565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611dd560268361176d565b9150611de082611d79565b604082019050919050565b60006020820190508181036000830152611e0481611dc8565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e4160208361176d565b9150611e4c82611e0b565b602082019050919050565b60006020820190508181036000830152611e7081611e34565b905091905056fea26469706673582212200982d3846da6d13f33c3fbb0b97b2a35ddb4bf0c4e261fa6a6cd996e4884609364736f6c63430008100033";

type DummyLendingServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyLendingServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyLendingService__factory extends ContractFactory {
  constructor(...args: DummyLendingServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    acme: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DummyLendingService> {
    return super.deploy(acme, overrides || {}) as Promise<DummyLendingService>;
  }
  override getDeployTransaction(
    acme: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(acme, overrides || {});
  }
  override attach(address: string): DummyLendingService {
    return super.attach(address) as DummyLendingService;
  }
  override connect(signer: Signer): DummyLendingService__factory {
    return super.connect(signer) as DummyLendingService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyLendingServiceInterface {
    return new utils.Interface(_abi) as DummyLendingServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyLendingService {
    return new Contract(address, _abi, signerOrProvider) as DummyLendingService;
  }
}
