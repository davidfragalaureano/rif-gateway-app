/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERC677, ERC677Interface } from "../../../contracts/mocks/ERC677";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialBalance",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b7538038062001b75833981810160405281019062000037919062000430565b818181600390816200004a919062000721565b5080600490816200005c919062000721565b5050506200007184846200007b60201b60201c565b5050505062000923565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e49062000869565b60405180910390fd5b6200010160008383620001f360201b60201c565b8060026000828254620001159190620008ba565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016c9190620008ba565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d3919062000906565b60405180910390a3620001ef60008383620001f860201b60201c565b5050565b505050565b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023e8262000211565b9050919050565b620002508162000231565b81146200025c57600080fd5b50565b600081519050620002708162000245565b92915050565b6000819050919050565b6200028b8162000276565b81146200029757600080fd5b50565b600081519050620002ab8162000280565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200030682620002bb565b810181811067ffffffffffffffff82111715620003285762000327620002cc565b5b80604052505050565b60006200033d620001fd565b90506200034b8282620002fb565b919050565b600067ffffffffffffffff8211156200036e576200036d620002cc565b5b6200037982620002bb565b9050602081019050919050565b60005b83811015620003a657808201518184015260208101905062000389565b60008484015250505050565b6000620003c9620003c38462000350565b62000331565b905082815260208101848484011115620003e857620003e7620002b6565b5b620003f584828562000386565b509392505050565b600082601f830112620004155762000414620002b1565b5b815162000427848260208601620003b2565b91505092915050565b600080600080608085870312156200044d576200044c62000207565b5b60006200045d878288016200025f565b945050602062000470878288016200029a565b935050604085015167ffffffffffffffff8111156200049457620004936200020c565b5b620004a287828801620003fd565b925050606085015167ffffffffffffffff811115620004c657620004c56200020c565b5b620004d487828801620003fd565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200053357607f821691505b602082108103620005495762000548620004eb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000574565b620005bf868362000574565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000602620005fc620005f68462000276565b620005d7565b62000276565b9050919050565b6000819050919050565b6200061e83620005e1565b620006366200062d8262000609565b84845462000581565b825550505050565b600090565b6200064d6200063e565b6200065a81848462000613565b505050565b5b8181101562000682576200067660008262000643565b60018101905062000660565b5050565b601f821115620006d1576200069b816200054f565b620006a68462000564565b81016020851015620006b6578190505b620006ce620006c58562000564565b8301826200065f565b50505b505050565b600082821c905092915050565b6000620006f660001984600802620006d6565b1980831691505092915050565b6000620007118383620006e3565b9150826002028217905092915050565b6200072c82620004e0565b67ffffffffffffffff811115620007485762000747620002cc565b5b6200075482546200051a565b6200076182828562000686565b600060209050601f83116001811462000799576000841562000784578287015190505b62000790858262000703565b86555062000800565b601f198416620007a9866200054f565b60005b82811015620007d357848901518255600182019150602085019450602081019050620007ac565b86831015620007f35784890151620007ef601f891682620006e3565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000851601f8362000808565b91506200085e8262000819565b602082019050919050565b60006020820190508181036000830152620008848162000842565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620008c78262000276565b9150620008d48362000276565b9250828201905080821115620008ef57620008ee6200088b565b5b92915050565b620009008162000276565b82525050565b60006020820190506200091d6000830184620008f5565b92915050565b61124280620009336000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b1f565b60405180910390f35b6100e660048036038101906100e19190610bda565b610308565b6040516100f39190610c35565b60405180910390f35b61010461032b565b6040516101119190610c5f565b60405180910390f35b610134600480360381019061012f9190610c7a565b61033f565b6040516101419190610c35565b60405180910390f35b61015261036e565b60405161015f9190610ce9565b60405180910390f35b610182600480360381019061017d9190610bda565b610377565b60405161018f9190610c35565b60405180910390f35b6101b260048036038101906101ad9190610d04565b6103ae565b6040516101bf9190610c5f565b60405180910390f35b6101d06103f6565b6040516101dd9190610b1f565b60405180910390f35b61020060048036038101906101fb9190610bda565b610488565b60405161020d9190610c35565b60405180910390f35b610230600480360381019061022b9190610bda565b6104ff565b60405161023d9190610c35565b60405180910390f35b610260600480360381019061025b9190610d31565b610522565b60405161026d9190610c5f565b60405180910390f35b60606003805461028590610da0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610da0565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b6000806103136105a9565b90506103208185856105b1565b600191505092915050565b60006b033b2e3c9fd0803ce8000000905090565b60008061034a6105a9565b905061035785828561077a565b610362858585610806565b60019150509392505050565b60006012905090565b6000806103826105a9565b90506103a38185856103948589610522565b61039e9190610e00565b6105b1565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461040590610da0565b80601f016020809104026020016040519081016040528092919081815260200182805461043190610da0565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b6000806104936105a9565b905060006104a18286610522565b9050838110156104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd90610ea6565b60405180910390fd5b6104f382868684036105b1565b60019250505092915050565b60008061050a6105a9565b9050610517818585610806565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610620576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061790610f38565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690610fca565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161076d9190610c5f565b60405180910390a3505050565b60006107868484610522565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461080057818110156107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990611036565b60405180910390fd5b6107ff84848484036105b1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610875576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086c906110c8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108db9061115a565b60405180910390fd5b6108ef838383610a85565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906111ec565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a089190610e00565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a6c9190610c5f565b60405180910390a3610a7f848484610a8a565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ac9578082015181840152602081019050610aae565b60008484015250505050565b6000601f19601f8301169050919050565b6000610af182610a8f565b610afb8185610a9a565b9350610b0b818560208601610aab565b610b1481610ad5565b840191505092915050565b60006020820190508181036000830152610b398184610ae6565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7182610b46565b9050919050565b610b8181610b66565b8114610b8c57600080fd5b50565b600081359050610b9e81610b78565b92915050565b6000819050919050565b610bb781610ba4565b8114610bc257600080fd5b50565b600081359050610bd481610bae565b92915050565b60008060408385031215610bf157610bf0610b41565b5b6000610bff85828601610b8f565b9250506020610c1085828601610bc5565b9150509250929050565b60008115159050919050565b610c2f81610c1a565b82525050565b6000602082019050610c4a6000830184610c26565b92915050565b610c5981610ba4565b82525050565b6000602082019050610c746000830184610c50565b92915050565b600080600060608486031215610c9357610c92610b41565b5b6000610ca186828701610b8f565b9350506020610cb286828701610b8f565b9250506040610cc386828701610bc5565b9150509250925092565b600060ff82169050919050565b610ce381610ccd565b82525050565b6000602082019050610cfe6000830184610cda565b92915050565b600060208284031215610d1a57610d19610b41565b5b6000610d2884828501610b8f565b91505092915050565b60008060408385031215610d4857610d47610b41565b5b6000610d5685828601610b8f565b9250506020610d6785828601610b8f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db857607f821691505b602082108103610dcb57610dca610d71565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0b82610ba4565b9150610e1683610ba4565b9250828201905080821115610e2e57610e2d610dd1565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e90602583610a9a565b9150610e9b82610e34565b604082019050919050565b60006020820190508181036000830152610ebf81610e83565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f22602483610a9a565b9150610f2d82610ec6565b604082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fb4602283610a9a565b9150610fbf82610f58565b604082019050919050565b60006020820190508181036000830152610fe381610fa7565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611020601d83610a9a565b915061102b82610fea565b602082019050919050565b6000602082019050818103600083015261104f81611013565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110b2602583610a9a565b91506110bd82611056565b604082019050919050565b600060208201905081810360008301526110e1816110a5565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611144602383610a9a565b915061114f826110e8565b604082019050919050565b6000602082019050818103600083015261117381611137565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111d6602683610a9a565b91506111e18261117a565b604082019050919050565b60006020820190508181036000830152611205816111c9565b905091905056fea264697066735822122007fe72a3f7ef617494a1df24bb09264fb2c9307b3f2ed2408f831c7169c2a25864736f6c63430008100033";

type ERC677ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC677ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC677__factory extends ContractFactory {
  constructor(...args: ERC677ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialAccount: PromiseOrValue<string>,
    initialBalance: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC677> {
    return super.deploy(
      initialAccount,
      initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    ) as Promise<ERC677>;
  }
  override getDeployTransaction(
    initialAccount: PromiseOrValue<string>,
    initialBalance: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialAccount,
      initialBalance,
      tokenName,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): ERC677 {
    return super.attach(address) as ERC677;
  }
  override connect(signer: Signer): ERC677__factory {
    return super.connect(signer) as ERC677__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC677Interface {
    return new utils.Interface(_abi) as ERC677Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC677 {
    return new Contract(address, _abi, signerOrProvider) as ERC677;
  }
}
