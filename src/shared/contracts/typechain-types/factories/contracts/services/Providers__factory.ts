/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Providers,
  ProvidersInterface,
} from "../../../contracts/services/Providers";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ServiceTypeManager",
        name: "stm",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "InvalidProviderAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "serviceType",
        type: "bytes4",
      },
    ],
    name: "InvalidServiceImplementation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "NonConformityErrMsg",
        type: "string",
      },
    ],
    name: "NonConformity",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract Service",
        name: "service",
        type: "address",
      },
    ],
    name: "addService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getServices",
    outputs: [
      {
        internalType: "contract Service[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a58380380610a5883398101604081905261002f916100ad565b6100383361005d565b600480546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b61096c806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063754178511161005057806375417851146100895780638da5cb5b146100a7578063f2fde38b146100c257600080fd5b80635372a9ce1461006c578063715018a614610081575b600080fd5b61007f61007a3660046107f1565b6100d5565b005b61007f610505565b610091610519565b60405161009e9190610815565b60405180910390f35b6000546040516001600160a01b03909116815260200161009e565b61007f6100d03660046107f1565b610695565b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000080825260048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610132573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101569190610862565b6101e7576040517fc06d352f00000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5365727669636520646f6573206e6f7420696d706c656d656e7420455243313660448201527f350000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60048054604080517fd4604b0200000000000000000000000000000000000000000000000000000000815290516001600160a01b03928316936301ffc9a79386169263d4604b0292818301926020928290030181865afa15801561024f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102739190610884565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b81168252919091166004820152602401602060405180830381865afa1580156102c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ed9190610862565b6103b95780816001600160a01b031663d4604b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610884565b6040517fabd6a3b30000000000000000000000000000000000000000000000000000000081526001600160a01b0390921660048301527fffffffff000000000000000000000000000000000000000000000000000000001660248201526044016101de565b6000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d91906108c6565b90506001600160a01b03811661046a576040517f59e3460e0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526024016101de565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b0385811691821790935560009081526020848152604082208054958601815582528120909301805490911691851691909117905560038054916104fc836108e3565b91905055505050565b61050d610725565b610517600061077f565b565b6060600060035467ffffffffffffffff8111156105385761053861090a565b604051908082528060200260200182016040528015610561578160200160208202803683370190505b5090506000805b60025481101561068d576000600160006002848154811061058b5761058b610920565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208054825181850281018501909352808352919290919083018282801561060157602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116105e3575b5050505050905060005b81518110156106785781818151811061062657610626610920565b602002602001015185858151811061064057610640610920565b6001600160a01b039092166020928302919091019091015283610662816108e3565b9450508080610670906108e3565b91505061060b565b50508080610685906108e3565b915050610568565b509092915050565b61069d610725565b6001600160a01b0381166107195760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101de565b6107228161077f565b50565b6000546001600160a01b031633146105175760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101de565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461072257600080fd5b60006020828403121561080357600080fd5b813561080e816107dc565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156108565783516001600160a01b031683529284019291840191600101610831565b50909695505050505050565b60006020828403121561087457600080fd5b8151801515811461080e57600080fd5b60006020828403121561089657600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461080e57600080fd5b6000602082840312156108d857600080fd5b815161080e816107dc565b60006001820161090357634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ebac94e826952fd4880d1157e385d8bfe0e7be7a7c833143d0f9042ed7de586d64736f6c63430008100033";

type ProvidersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProvidersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Providers__factory extends ContractFactory {
  constructor(...args: ProvidersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    stm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Providers> {
    return super.deploy(stm, overrides || {}) as Promise<Providers>;
  }
  override getDeployTransaction(
    stm: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stm, overrides || {});
  }
  override attach(address: string): Providers {
    return super.attach(address) as Providers;
  }
  override connect(signer: Signer): Providers__factory {
    return super.connect(signer) as Providers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvidersInterface {
    return new utils.Interface(_abi) as ProvidersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Providers {
    return new Contract(address, _abi, signerOrProvider) as Providers;
  }
}
