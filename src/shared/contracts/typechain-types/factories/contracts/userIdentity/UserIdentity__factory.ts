/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  UserIdentity,
  UserIdentityInterface,
} from "../../../contracts/userIdentity/UserIdentity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "acl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "FundsNotReceived",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "UnexpectedError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionToCall",
        type: "bytes",
      },
    ],
    name: "read",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionToCall",
        type: "bytes",
      },
    ],
    name: "retrieve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionToCall",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "retrieveTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionToCall",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetContract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionToCall",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "kToken",
        type: "address",
      },
    ],
    name: "sendTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dbc380380610dbc83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610cfe806100be6000396000f3fe60806040526004361061005e5760003560e01c8063c89acc8611610043578063c89acc86146100f7578063d26b117c1461010a578063d79f44eb1461012a57600080fd5b8063621091c2146100a25780638058f478146100d757600080fd5b3661009d57604080513381523460208201527fb58278ed56aa79ad2e243963b44b165a8f76d629f61c01dd3649d658e0eacca4910160405180910390a1005b600080fd5b3480156100ae57600080fd5b506100c26100bd366004610af2565b610157565b60405190151581526020015b60405180910390f35b3480156100e357600080fd5b506100c26100f2366004610b45565b61032e565b6100c2610105366004610af2565b610588565b34801561011657600080fd5b506100c2610125366004610baa565b6106a4565b34801561013657600080fd5b5061014a610145366004610af2565b610968565b6040516100ce9190610c28565b600154600080546040516312ea54df60e11b81526001600160a01b039182166004820152336024820152919216906325d4a9be90604401602060405180830381865afa1580156101ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cf9190610c76565b6101f3576040516373aabd2960e11b81523360048201526024015b60405180910390fd5b600080856001600160a01b03168585604051610210929190610c9f565b6000604051808303816000865af19150503d806000811461024d576040519150601f19603f3d011682016040523d82523d6000602084013e610252565b606091505b5091509150816102775780604051636b167e4360e11b81526004016101ea9190610c28565b47156102fb576000805460405182916001600160a01b03169047908381818185875af1925050503d80600081146102ca576040519150601f19603f3d011682016040523d82523d6000602084013e6102cf565b606091505b5091509150816102f45780604051636b167e4360e11b81526004016101ea9190610c28565b5050610325565b604051631e16cb1b60e01b81523360048201526001600160a01b03871660248201526044016101ea565b50949350505050565b600154600080546040516312ea54df60e11b81526001600160a01b039182166004820152336024820152919216906325d4a9be90604401602060405180830381865afa158015610382573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a69190610c76565b6103c5576040516373aabd2960e11b81523360048201526024016101ea565b600080866001600160a01b031686866040516103e2929190610c9f565b6000604051808303816000865af19150503d806000811461041f576040519150601f19603f3d011682016040523d82523d6000602084013e610424565b606091505b5091509150816104495780604051636b167e4360e11b81526004016101ea9190610c28565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190610caf565b90508015610552576000546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018390529086169063a9059cbb906044016020604051808303816000875af1158015610528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054c9190610c76565b5061057c565b604051631e16cb1b60e01b81523360048201526001600160a01b03891660248201526044016101ea565b50909695505050505050565b600154600080546040516312ea54df60e11b81526001600160a01b039182166004820152336024820152919216906325d4a9be90604401602060405180830381865afa1580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610c76565b61061f576040516373aabd2960e11b81523360048201526024016101ea565b600080856001600160a01b031634868660405161063d929190610c9f565b60006040518083038185875af1925050503d806000811461067a576040519150601f19603f3d011682016040523d82523d6000602084013e61067f565b606091505b5091509150816103255780604051636b167e4360e11b81526004016101ea9190610c28565b600154600080546040516312ea54df60e11b81526001600160a01b039182166004820152336024820152919216906325d4a9be90604401602060405180830381865afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c9190610c76565b61073b576040516373aabd2960e11b81523360048201526024016101ea565b600080546040516370a0823160e01b81526001600160a01b039182166004820152908616906370a0823190602401602060405180830381865afa158015610786573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107aa9190610caf565b9050838110610552576000546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03918216600482015230602482015260448101869052908616906323b872dd906064016020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610c76565b506040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301526024820186905286169063095ea7b3906044016020604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190610c76565b50600080896001600160a01b031689896040516108f4929190610c9f565b6000604051808303816000865af19150503d8060008114610931576040519150601f19603f3d011682016040523d82523d6000602084013e610936565b606091505b50915091508161095b5780604051636b167e4360e11b81526004016101ea9190610c28565b5098975050505050505050565b6001546000546040516312ea54df60e11b81526001600160a01b03918216600482015233602482015260609291909116906325d4a9be90604401602060405180830381865afa1580156109bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e39190610c76565b610a02576040516373aabd2960e11b81523360048201526024016101ea565b600080856001600160a01b03168585604051610a1f929190610c9f565b600060405180830381855afa9150503d8060008114610a5a576040519150601f19603f3d011682016040523d82523d6000602084013e610a5f565b606091505b509150915081610a845780604051636b167e4360e11b81526004016101ea9190610c28565b95945050505050565b80356001600160a01b0381168114610aa457600080fd5b919050565b60008083601f840112610abb57600080fd5b50813567ffffffffffffffff811115610ad357600080fd5b602083019150836020828501011115610aeb57600080fd5b9250929050565b600080600060408486031215610b0757600080fd5b610b1084610a8d565b9250602084013567ffffffffffffffff811115610b2c57600080fd5b610b3886828701610aa9565b9497909650939450505050565b60008060008060608587031215610b5b57600080fd5b610b6485610a8d565b9350602085013567ffffffffffffffff811115610b8057600080fd5b610b8c87828801610aa9565b9094509250610b9f905060408601610a8d565b905092959194509250565b60008060008060008060a08789031215610bc357600080fd5b610bcc87610a8d565b9550602087013567ffffffffffffffff811115610be857600080fd5b610bf489828a01610aa9565b9096509450610c07905060408801610a8d565b925060608701359150610c1c60808801610a8d565b90509295509295509295565b600060208083528351808285015260005b81811015610c5557858101830151858201604001528201610c39565b506000604082860101526040601f19601f8301168501019250505092915050565b600060208284031215610c8857600080fd5b81518015158114610c9857600080fd5b9392505050565b8183823760009101908152919050565b600060208284031215610cc157600080fd5b505191905056fea26469706673582212206c858a7fc7f3ecf0231b8bdd90512695360392d2494b7abdbea45e891862795d64736f6c63430008100033";

type UserIdentityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserIdentityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserIdentity__factory extends ContractFactory {
  constructor(...args: UserIdentityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    user: PromiseOrValue<string>,
    acl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserIdentity> {
    return super.deploy(user, acl, overrides || {}) as Promise<UserIdentity>;
  }
  override getDeployTransaction(
    user: PromiseOrValue<string>,
    acl: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(user, acl, overrides || {});
  }
  override attach(address: string): UserIdentity {
    return super.attach(address) as UserIdentity;
  }
  override connect(signer: Signer): UserIdentity__factory {
    return super.connect(signer) as UserIdentity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserIdentityInterface {
    return new utils.Interface(_abi) as UserIdentityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserIdentity {
    return new Contract(address, _abi, signerOrProvider) as UserIdentity;
  }
}
